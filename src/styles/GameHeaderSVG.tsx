import React, { ReactNode, useState, useEffect } from "react"
import { renderToStaticMarkup } from 'react-dom/server';

interface GameHeaderProps {
  children?: ReactNode;
}

export const GameHeader: React.FC<GameHeaderProps> = ({ children }, props) => {
  const [dimensions, setDimensions] = useState({ 
    height: window.innerHeight * window.devicePixelRatio, 
    width: window.innerWidth * window.devicePixelRatio 
  });

  useEffect(() => {
    function handleResize() {
      setDimensions({
        height: window.innerHeight * window.devicePixelRatio,
        width: window.innerWidth * window.devicePixelRatio
      });
    }
    window.addEventListener('resize', handleResize);

    return () => {
      window.removeEventListener('resize', handleResize);
    };
  }, []);

  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      id="a"
      width="100%"
      viewBox={`0 0 ${dimensions.width} ${dimensions.height}`}
      {...props}
      style={{position: 'absolute', zIndex:1, top:'-20vw', }}
    >
      <defs>
        <clipPath id="b">
          <path
            d="M1226.2 171.2h-1125v194h284.3c-.9 6.6-1.3 13.4-1.3 20.2 0 115.3 127.2 208.8 284 208.8s284-93.5 284-208.8-.5-13.5-1.3-20.2h275.3v-194Zm-560 379c-115.2 0-208.5-62.8-208.5-140.3s93.4-140.3 208.5-140.3 208.5 62.8 208.5 140.3-93.4 140.3-208.5 140.3Z"
            style={{
              fill: "none",
            }}
          />
        </clipPath>
        <style>{".g{fill:#1a1a1a}.h{fill:#545668}.g{opacity:.8}"}</style>
      </defs>
      <path
        d="M1226.2 171.2h-1125v194h284.3c-.9 6.6-1.3 13.4-1.3 20.2 0 115.3 127.2 208.8 284 208.8s284-93.5 284-208.8-.5-13.5-1.3-20.2h275.3v-194Zm-560 379c-115.2 0-208.5-62.8-208.5-140.3s93.4-140.3 208.5-140.3 208.5 62.8 208.5 140.3-93.4 140.3-208.5 140.3Z"
        style={{
          fill: "#3f404f",
        }}
      />
      <g
        style={{
          clipPath: "url(#b)",
        }}
      >
        <path
          d="M305.8 1164.6c-74.6 0-135.3 60.8-135.3 135.5s60.7 135.5 135.3 135.5 135.3-60.8 135.3-135.5-60.7-135.5-135.3-135.5Zm0 254.9c-65.7 0-119.1-53.5-119.1-119.3s53.4-119.3 119.1-119.3 119.1 53.5 119.1 119.3-53.4 119.3-119.1 119.3Z"
          className="h"
        />
        <path
          d="M544.6 1285.5h-31.2c-3.4-50.1-24.6-96.8-60.4-132.7-36.3-36.4-83.7-57.6-134.5-60.6V1063h-25.6v29.2c-50.7 3.1-97.9 24.3-134.2 60.6-35.8 35.9-57 82.6-60.4 132.7H64.1v25.6h34c2.7 51.5 24 99.6 60.6 136.3 36.2 36.3 83.5 57.5 134.2 60.6v29.2h25.6V1508c50.8-3 98.2-24.3 134.5-60.6 36.7-36.7 58-84.8 60.6-136.3h31v-25.6Zm-226.5 182h-24.5c-86.7-6.3-155.4-79-155.4-167.4s68.6-161.1 155.4-167.4h24.5c86.7 6.3 155.4 79 155.4 167.4s-68.6 161.1-155.4 167.4Z"
          className="h"
        />
        <circle
          cx={305.9}
          cy={1299.9}
          r={119.1}
          style={{
            opacity: 0.4,
            fill: "#545668",
          }}
        />
      </g>
      <ellipse
        cx={663.2}
        cy={409.9}
        rx={208.5}
        ry={140.3}
        style={{
          fill: "#fbae17",
          opacity: 0.8,
        }}
      />
      <path
        d="M457.2 409.9c0-77.7 92.7-140.7 207-140.7-130.3 0-236 63-236 140.7s105.7 140.7 236 140.7c-114.3 0-207-63-207-140.7ZM664.2 269.2c114.3 0 207 63 207 140.7s-92.7 140.7-207 140.7c130.3 0 236-63 236-140.7s-105.7-140.7-236-140.7Z"
        className="g"
      />
      <path
        d="M249.2 401.2c1.2-1.6 2.9-1.8 4.5-2 2.2-.3 4.4-.6 6.6-.6h67.1c2.9 0 5.8.5 8.7 1.1 2 .4 2.3.9 2.4 3.2.4 5.9.6 11.9 1.2 17.8 1.2 11.5 3.8 22.6 7.5 33.4 6.9 20.6 17.2 39.1 30.1 55.7 5.4 6.9 11.1 13.6 17 19.9 12.4 13.3 26.2 24.7 40.8 35 10.6 7.5 21.5 14.3 32.8 20.4 14.1 7.6 28.6 14.2 43.5 19.9 16.9 6.5 34 11.8 51.5 15.8 11 2.5 22.1 4.7 33.2 6.5 8.8 1.5 17.6 2.5 26.5 3.5 5.2.6 10.3.8 15.5 1.1 3.9.2 7.7.5 11.6.5 8.4.1 16.7.3 25.1.1 7.1-.1 14.2-.6 21.3-1.2 8.1-.7 16.2-1.3 24.3-2.5 10.5-1.5 21.1-3.4 31.5-5.5 14.1-2.7 28-6.6 41.8-11 19.6-6.3 38.8-14 57.3-23.4 17-8.7 33.4-18.7 48.8-30.5 10.5-8 20.5-16.7 29.9-26.3 13.3-13.5 25-28.6 34.6-45.6 8.8-15.5 15.5-32.1 19.5-49.9 2-8.9 3.3-17.9 3.7-27 0-2.4.2-4.7.2-7.1 0-1.5.5-2.4 1.7-2.6 2.3-.5 4.5-1.1 6.8-1.1 11.5-.2 22.9-.2 34.4-.2h22.8c3.8 0 7.5-.4 11.2-.2 3.4.2 6.9.8 10.3 1.5 1.8.4 2 .9 2 3-.3 18.2-2.8 36-7.7 53.3-3.5 12.4-8 24.4-13.4 35.9-7.7 16.4-17 31.6-27.6 45.8-6.7 9-13.9 17.6-21.5 25.7-13.7 14.7-28.5 27.9-44.2 39.9-16.6 12.7-34 23.8-52.1 33.6-15.6 8.5-31.6 15.9-48 22.4-17.6 7-35.5 13-53.7 17.7-12.2 3.1-24.4 6-36.7 8.5-11.1 2.2-22.3 3.9-33.4 5.6-5.7.9-11.5 1.4-17.2 2-6.4.6-12.8 1.1-19.2 1.6-4.8.4-9.6.7-14.3.8-11.4.3-22.8.4-34.2.5-4.7 0-9.4-.2-14.1-.3-4.9-.2-9.7-.4-14.6-.8-8.3-.7-16.7-1.4-25-2.3-7.9-.9-15.7-1.9-23.5-3.1-7.6-1.2-15.2-2.5-22.8-4-14.6-2.8-29-6.3-43.4-10.4-24.3-6.9-48-15.5-71.1-26.4-8.9-4.2-17.7-8.7-26.3-13.4-16.2-8.7-31.7-18.8-46.6-30-13.1-9.9-25.7-20.5-37.5-32.4-5-5.1-10-10.2-14.7-15.5-12.3-14-23.4-29.1-33-45.5-9.9-17.1-18-35.3-23.6-54.7-3.4-11.8-5.8-23.9-7-36.2-.5-4.8-.7-9.7-1-14.5 0-.3-.1-.6-.2-.9v-4.6Zm44.8 3.6h-13.1c-1.3 0-1.6.4-1.5 1.7.2 2.6.2 5.3.5 7.9.8 6.9 1.4 13.9 2.5 20.8 3 18.5 8.7 36 16.2 52.7 4.7 10.4 10 20.3 16 29.9 7.9 12.7 16.7 24.6 26.4 35.7 5.4 6.2 11 12.1 16.7 17.9 12.9 13 26.8 24.6 41.3 35.2 15 11 30.6 20.9 46.9 29.4 7.4 3.9 14.9 7.7 22.5 11.3 19 8.9 38.5 16.2 58.4 22.2 14 4.2 28 8 42.3 10.7 11.9 2.3 24 4.3 36 6 9.6 1.3 19.2 2.1 28.8 2.9 5.5.5 11 .8 16.5.8 9 0 17.9 0 26.9-.2 6.6-.2 13.2-.6 19.8-1.1 6.5-.5 13.1-1.1 19.5-1.9 8.7-1.1 17.3-2.3 26-3.8 13.8-2.3 27.4-5.4 41-9 17.1-4.6 33.9-10.2 50.4-16.7 23-9.1 45.3-20 66.8-33.1 17.6-10.7 34.3-22.8 50.1-36.6 14.1-12.2 27.3-25.5 39.3-40.2 9.4-11.6 18-23.9 25.6-37.1 6.7-11.7 12.5-23.9 17.3-36.7 5.1-13.7 8.9-27.9 11.2-42.5 1.3-8.1 2.1-16.2 2.3-24.4 0-1.8 0-1.9-1.6-1.9h-24.8c-2.8 0-2.1-.6-2.5 2.8-.5 5-.7 10-1.2 14.9-1.4 12.4-4.5 24.3-8.7 35.8-5.5 15.1-12.8 29.1-21.5 42.1-8.1 12.1-17.3 23.1-27.3 33.3-8.9 9.1-18.4 17.4-28.3 25.1-13.9 10.7-28.3 20.3-43.6 28.3-9.1 4.8-18.3 9.3-27.6 13.6-17.4 7.9-35.3 14.1-53.4 19.3-18.1 5.2-36.4 9.3-54.9 12.1-11.8 1.8-23.7 3.3-35.5 4.7-6.6.8-13.2 1.2-19.8 1.6-5.9.4-11.7.8-17.6.8-11.2 0-22.4 0-33.6-.2-4.1 0-8.1-.3-12.2-.5-6.2-.4-12.3-.8-18.5-1.3-5.5-.5-11-1-16.4-1.7-8.7-1.2-17.3-2.5-26-3.9-14.9-2.5-29.7-5.9-44.4-9.8-14.7-4-29.2-8.7-43.6-14.2-14-5.4-27.8-11.5-41.2-18.7-16.8-8.9-33-19.2-48.2-31.2-15.6-12.3-30.1-26.1-42.8-42.1-15.3-19.2-27.5-40.5-35.1-64.9-4.5-14.4-7.2-29.3-7.6-44.6 0-1-.3-1.3-1.2-1.3h-13.2Z"
        style={{
          fill: "#1a1a1a",
        }}
      />
      <path
        d="M294 404.7h13.2c.9 0 1.2.2 1.2 1.3.4 15.3 3.1 30.2 7.6 44.6 7.6 24.4 19.8 45.7 35.1 64.9 12.7 16 27.2 29.8 42.8 42.1 15.2 12 31.4 22.2 48.2 31.2 13.4 7.1 27.1 13.3 41.2 18.7 14.3 5.5 28.9 10.2 43.6 14.2 14.7 4 29.4 7.4 44.4 9.8 8.6 1.4 17.3 2.7 26 3.9 5.5.7 11 1.2 16.4 1.7 6.2.5 12.3 1 18.5 1.3 4.1.3 8.1.5 12.2.5 11.2.1 22.4.3 33.6.2 5.9 0 11.7-.4 17.6-.8 6.6-.4 13.2-.8 19.8-1.6 11.9-1.4 23.7-2.9 35.5-4.7 18.5-2.8 36.8-7 54.9-12.1 18.2-5.2 36.1-11.3 53.4-19.3 9.3-4.2 18.5-8.8 27.6-13.6 15.3-8 29.7-17.6 43.6-28.3 9.9-7.7 19.4-16 28.3-25.1 10-10.2 19.2-21.3 27.3-33.3 8.8-13 16.1-27 21.5-42.1 4.2-11.5 7.2-23.4 8.7-35.8.6-4.9.7-9.9 1.2-14.9.3-3.3-.4-2.8 2.5-2.8h24.8c1.6 0 1.6 0 1.6 1.9-.2 8.2-1 16.4-2.3 24.4-2.3 14.6-6.1 28.8-11.2 42.5-4.8 12.8-10.6 25-17.3 36.7-7.6 13.2-16.1 25.5-25.6 37.1-12 14.7-25.2 28-39.3 40.2-15.8 13.7-32.6 25.8-50.1 36.6-21.4 13.1-43.7 24-66.8 33.1-16.6 6.5-33.4 12.1-50.4 16.7-13.5 3.7-27.2 6.8-41 9-8.6 1.4-17.3 2.7-26 3.8-6.5.8-13 1.4-19.5 1.9-6.6.5-13.2.9-19.8 1.1-8.9.2-17.9.3-26.9.2-5.5 0-11-.3-16.5-.8-9.6-.8-19.3-1.6-28.8-2.9-12-1.7-24-3.7-36-6-14.2-2.7-28.3-6.5-42.3-10.7-19.9-6-39.4-13.3-58.4-22.2-7.6-3.5-15.1-7.3-22.5-11.3-16.2-8.6-31.8-18.4-46.9-29.4-14.5-10.6-28.4-22.2-41.3-35.2-5.7-5.8-11.3-11.7-16.7-17.9-9.7-11.1-18.5-23-26.4-35.7-5.9-9.5-11.3-19.5-16-29.9-7.5-16.8-13.2-34.3-16.2-52.7-1.1-6.9-1.7-13.8-2.5-20.8-.3-2.6-.2-5.2-.5-7.9-.1-1.3.2-1.8 1.5-1.7h13.1Z"
        style={{
          opacity: 0.7,
          fill: "#3f404f",
        }}
      />
      {children}
    </svg>
  )
}
export default GameHeader;


// import React, { useState, useEffect, ReactNode } from 'react';
// import { ReactComponent as LogoSvg } from './GameHeader.svg';


// interface GameHeaderProps {
//   children?: ReactNode;
// }

// export const GameHeader: React.FC<GameHeaderProps> = ({ children }, props) => {
//   const [dimensions, setDimensions] = useState({ 
//     height: window.innerHeight, 
//     width: window.innerWidth 
//   });

//   useEffect(() => {
//     function handleResize() {
//       setDimensions({
//         height: window.innerHeight,
//         width: window.innerWidth
//       });
//     }

//     window.addEventListener('resize', handleResize);

//     return () => {
//       window.removeEventListener('resize', handleResize);
//     };
//   }, []);

//   return <LogoSvg width={dimensions.width} height={dimensions.height} />;
// }

// export default GameHeaderProps;
